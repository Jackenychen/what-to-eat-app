(()=>{var e={};e.id=798,e.ids=[798],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4460:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>v,routeModule:()=>x,serverHooks:()=>N,workAsyncStorage:()=>T,workUnitAsyncStorage:()=>A});var t={};s.r(t),s.d(t,{DELETE:()=>y,GET:()=>f,POST:()=>g});var a=s(6559),o=s(8088),n=s(7719),i=s(2190),c=s(8909);let u=process.env.NEON_URL||process.env.DATABASE_URL;if(!u)throw Error("Database URL not found. Please set NEON_URL or DATABASE_URL environment variable.");let d=(0,c.lw)(u);async function l(){try{await d`
      CREATE TABLE IF NOT EXISTS dishes (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL UNIQUE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `,console.log("Dishes table created or already exists")}catch(e){throw console.error("Error creating dishes table:",e),e}}async function p(){try{return await d`
      SELECT id, name, created_at 
      FROM dishes 
      ORDER BY created_at DESC
    `}catch(e){throw console.error("Error fetching dishes:",e),e}}async function E(e){try{let r=e.trim();if(!r)throw Error("菜品名称不能为空");let s=await d`
      INSERT INTO dishes (name) 
      VALUES (${r}) 
      RETURNING id, name, created_at
    `;if(0===s.length)throw Error("添加菜品失败");return s[0]}catch(e){if(e instanceof Error&&e.message?.includes("duplicate key"))throw Error("该菜品已存在");throw console.error("Error adding dish:",e),e}}async function h(e){try{await d`
      DELETE FROM dishes
      WHERE name = ${e}
    `,console.log(`Deleted dish: ${e}`)}catch(e){throw console.error("Error deleting dish by name:",e),e}}async function R(){try{await d`DELETE FROM dishes`,console.log("All dishes cleared")}catch(e){throw console.error("Error clearing all dishes:",e),e}}async function w(e){try{let r=[];for(let s of e)try{let e=await E(s);r.push(e)}catch(e){e instanceof Error&&e.message?.includes("已存在")||console.error(`Error adding dish ${s}:`,e)}return r}catch(e){throw console.error("Error adding multiple dishes:",e),e}}async function m(){try{await l()}catch(e){console.error("Error ensuring table exists:",e)}}async function f(){try{if(!(process.env.NEON_URL||process.env.DATABASE_URL))return console.error("Database URL environment variable is not set (NEON_URL or DATABASE_URL)"),i.NextResponse.json({success:!1,error:"Database configuration error"},{status:500});await m();let e=await p();return i.NextResponse.json({success:!0,data:e.map(e=>e.name)})}catch(r){console.error("Error in GET /api/dishes:",r);let e=r instanceof Error?r.message:"获取菜品失败";return i.NextResponse.json({success:!1,error:e,debug:void 0},{status:500})}}async function g(e){try{await m();let{name:r,dishes:s}=await e.json();if(s&&Array.isArray(s)){let e=await w(s),r=await p();return i.NextResponse.json({success:!0,data:r.map(e=>e.name),message:`成功添加 ${e.length} 道菜品`})}if(!r)return i.NextResponse.json({success:!1,error:"请提供菜品名称"},{status:400});{await E(r);let e=await p();return i.NextResponse.json({success:!0,data:e.map(e=>e.name),message:"菜品添加成功"})}}catch(r){console.error("Error in POST /api/dishes:",r);let e=r instanceof Error?r.message:"添加菜品失败";return i.NextResponse.json({success:!1,error:e},{status:500})}}async function y(e){try{await m();let{name:r,clearAll:s}=await e.json();if(s)return await R(),i.NextResponse.json({success:!0,data:[],message:"所有菜品已清空"});if(!r)return i.NextResponse.json({success:!1,error:"请提供要删除的菜品名称或设置clearAll为true"},{status:400});{await h(r);let e=await p();return i.NextResponse.json({success:!0,data:e.map(e=>e.name),message:"菜品删除成功"})}}catch(r){console.error("Error in DELETE /api/dishes:",r);let e=r instanceof Error?r.message:"删除菜品失败";return i.NextResponse.json({success:!1,error:e},{status:500})}}let x=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/dishes/route",pathname:"/api/dishes",filename:"route",bundlePath:"app/api/dishes/route"},resolvedPagePath:"F:\\develop\\menu\\what-to-eat-app\\src\\app\\api\\dishes\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:T,workUnitAsyncStorage:A,serverHooks:N}=x;function v(){return(0,n.patchFetch)({workAsyncStorage:T,workUnitAsyncStorage:A})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[447,580,909],()=>s(4460));module.exports=t})();